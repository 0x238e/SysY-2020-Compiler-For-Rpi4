const 'const'
int 'int'
identifier 'N'
equal '='
numeric_constant '1024'
semi ';'
void 'void'
identifier 'mm'
l_paren '('
int 'int'
identifier 'n'
comma ','
int 'int'
identifier 'A'
l_square '['
r_square ']'
l_square '['
identifier 'N'
r_square ']'
comma ','
int 'int'
identifier 'B'
l_square '['
r_square ']'
l_square '['
identifier 'N'
r_square ']'
comma ','
int 'int'
identifier 'C'
l_square '['
r_square ']'
l_square '['
identifier 'N'
r_square ']'
r_paren ')'
l_brace '{'
int 'int'
identifier 'i'
comma ','
identifier 'j'
comma ','
identifier 'k'
semi ';'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'j'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'C'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
equal '='
numeric_constant '0'
semi ';'
identifier 'j'
equal '='
identifier 'j'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
identifier 'k'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'k'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
if 'if'
l_paren '('
identifier 'A'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'k'
r_square ']'
equalequal '=='
numeric_constant '0'
r_paren ')'
l_brace '{'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
continue 'continue'
semi ';'
r_brace '}'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'j'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'C'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
equal '='
identifier 'C'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
plus '+'
identifier 'A'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'k'
r_square ']'
star '*'
identifier 'B'
l_square '['
identifier 'k'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
semi ';'
identifier 'j'
equal '='
identifier 'j'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'k'
equal '='
identifier 'k'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
r_brace '}'
int 'int'
identifier 'A'
l_square '['
identifier 'N'
r_square ']'
l_square '['
identifier 'N'
r_square ']'
semi ';'
int 'int'
identifier 'B'
l_square '['
identifier 'N'
r_square ']'
l_square '['
identifier 'N'
r_square ']'
semi ';'
int 'int'
identifier 'C'
l_square '['
identifier 'N'
r_square ']'
l_square '['
identifier 'N'
r_square ']'
semi ';'
int 'int'
identifier 'main'
l_paren '('
r_paren ')'
l_brace '{'
int 'int'
identifier 'n'
equal '='
identifier 'getint'
l_paren '('
r_paren ')'
semi ';'
int 'int'
identifier 'i'
comma ','
identifier 'j'
semi ';'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'j'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'A'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
equal '='
identifier 'getint'
l_paren '('
r_paren ')'
semi ';'
identifier 'j'
equal '='
identifier 'j'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'j'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'B'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
equal '='
identifier 'getint'
l_paren '('
r_paren ')'
semi ';'
identifier 'j'
equal '='
identifier 'j'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'starttime'
l_paren '('
r_paren ')'
semi ';'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
numeric_constant '5'
r_paren ')'
l_brace '{'
identifier 'mm'
l_paren '('
identifier 'n'
comma ','
identifier 'A'
comma ','
identifier 'B'
comma ','
identifier 'C'
r_paren ')'
semi ';'
identifier 'mm'
l_paren '('
identifier 'n'
comma ','
identifier 'A'
comma ','
identifier 'C'
comma ','
identifier 'B'
r_paren ')'
semi ';'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
int 'int'
identifier 'ans'
equal '='
numeric_constant '0'
semi ';'
identifier 'i'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'j'
equal '='
numeric_constant '0'
semi ';'
while 'while'
l_paren '('
identifier 'j'
less '<'
identifier 'n'
r_paren ')'
l_brace '{'
identifier 'ans'
equal '='
identifier 'ans'
plus '+'
identifier 'B'
l_square '['
identifier 'i'
r_square ']'
l_square '['
identifier 'j'
r_square ']'
semi ';'
identifier 'j'
equal '='
identifier 'j'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
r_brace '}'
identifier 'stoptime'
l_paren '('
r_paren ')'
semi ';'
identifier 'putint'
l_paren '('
identifier 'ans'
r_paren ')'
semi ';'
identifier 'putchar'
l_paren '('
numeric_constant '10'
r_paren ')'
semi ';'
return 'return'
numeric_constant '0'
semi ';'
r_brace '}'
eof ''
