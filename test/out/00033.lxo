int 'int'
identifier 'g'
semi ';'
int 'int'
identifier 'effect'
l_paren '('
r_paren ')'
l_brace '{'
identifier 'g'
equal '='
numeric_constant '1'
semi ';'
return 'return'
numeric_constant '1'
semi ';'
r_brace '}'
int 'int'
identifier 'main'
l_paren '('
r_paren ')'
l_brace '{'
int 'int'
identifier 'x'
semi ';'
identifier 'g'
equal '='
numeric_constant '0'
semi ';'
identifier 'x'
equal '='
numeric_constant '0'
semi ';'
if 'if'
l_paren '('
identifier 'x'
ampamp '&&'
identifier 'effect'
l_paren '('
r_paren ')'
r_paren ')'
return 'return'
numeric_constant '1'
semi ';'
if 'if'
l_paren '('
identifier 'g'
r_paren ')'
return 'return'
numeric_constant '2'
semi ';'
identifier 'x'
equal '='
numeric_constant '1'
semi ';'
if 'if'
l_paren '('
identifier 'x'
ampamp '&&'
identifier 'effect'
l_paren '('
r_paren ')'
r_paren ')'
l_brace '{'
if 'if'
l_paren '('
identifier 'g'
exclaimequal '!='
numeric_constant '1'
r_paren ')'
return 'return'
numeric_constant '3'
semi ';'
r_brace '}'
else 'else'
l_brace '{'
return 'return'
numeric_constant '4'
semi ';'
r_brace '}'
identifier 'g'
equal '='
numeric_constant '0'
semi ';'
identifier 'x'
equal '='
numeric_constant '1'
semi ';'
if 'if'
l_paren '('
identifier 'x'
pipepipe '||'
identifier 'effect'
l_paren '('
r_paren ')'
r_paren ')'
l_brace '{'
if 'if'
l_paren '('
identifier 'g'
r_paren ')'
return 'return'
numeric_constant '5'
semi ';'
r_brace '}'
else 'else'
l_brace '{'
return 'return'
numeric_constant '6'
semi ';'
r_brace '}'
identifier 'x'
equal '='
numeric_constant '0'
semi ';'
if 'if'
l_paren '('
identifier 'x'
pipepipe '||'
identifier 'effect'
l_paren '('
r_paren ')'
r_paren ')'
l_brace '{'
if 'if'
l_paren '('
identifier 'g'
exclaimequal '!='
numeric_constant '1'
r_paren ')'
return 'return'
numeric_constant '7'
semi ';'
r_brace '}'
else 'else'
l_brace '{'
return 'return'
numeric_constant '8'
semi ';'
r_brace '}'
return 'return'
numeric_constant '0'
semi ';'
r_brace '}'
eof ''
