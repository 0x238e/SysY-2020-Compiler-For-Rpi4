int 'int'
identifier 'set'
l_paren '('
int 'int'
identifier 'a'
l_square '['
r_square ']'
comma ','
int 'int'
identifier 'pos'
comma ','
int 'int'
identifier 'd'
r_paren ')'
l_brace '{'
const 'const'
int 'int'
identifier 'bitcount'
equal '='
numeric_constant '30'
semi ';'
int 'int'
identifier 'x'
l_square '['
identifier 'bitcount'
plus '+'
numeric_constant '1'
r_square ']'
equal '='
l_brace '{'
r_brace '}'
semi ';'
identifier 'x'
l_square '['
numeric_constant '0'
r_square ']'
equal '='
numeric_constant '1'
semi ';'
identifier 'x'
l_square '['
numeric_constant '1'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '0'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '2'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '1'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '3'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '2'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '4'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '3'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '5'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '4'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '6'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '5'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '7'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '6'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '8'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '7'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '9'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '8'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
identifier 'x'
l_square '['
numeric_constant '10'
r_square ']'
equal '='
identifier 'x'
l_square '['
numeric_constant '9'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
int 'int'
identifier 'i'
equal '='
numeric_constant '10'
semi ';'
while 'while'
l_paren '('
identifier 'i'
less '<'
identifier 'bitcount'
r_paren ')'
l_brace '{'
identifier 'i'
equal '='
identifier 'i'
plus '+'
numeric_constant '1'
semi ';'
identifier 'x'
l_square '['
identifier 'i'
r_square ']'
equal '='
identifier 'x'
l_square '['
identifier 'i'
minus '-'
numeric_constant '1'
r_square ']'
star '*'
numeric_constant '2'
semi ';'
r_brace '}'
int 'int'
identifier 'v'
equal '='
numeric_constant '0'
semi ';'
if 'if'
l_paren '('
identifier 'pos'
slash '/'
identifier 'bitcount'
greaterequal '>='
numeric_constant '10000'
r_paren ')'
return 'return'
numeric_constant '0'
semi ';'
if 'if'
l_paren '('
identifier 'a'
l_square '['
identifier 'pos'
slash '/'
identifier 'bitcount'
r_square ']'
slash '/'
l_paren '('
identifier 'x'
l_square '['
identifier 'pos'
percent '%'
identifier 'bitcount'
r_square ']'
r_paren ')'
percent '%'
numeric_constant '2'
exclaimequal '!='
identifier 'd'
r_paren ')'
l_brace '{'
if 'if'
l_paren '('
identifier 'a'
l_square '['
identifier 'pos'
slash '/'
identifier 'bitcount'
r_square ']'
slash '/'
l_paren '('
identifier 'x'
l_square '['
identifier 'pos'
percent '%'
identifier 'bitcount'
r_square ']'
r_paren ')'
percent '%'
numeric_constant '2'
equalequal '=='
numeric_constant '0'
r_paren ')'
if 'if'
l_paren '('
identifier 'd'
equalequal '=='
numeric_constant '1'
r_paren ')'
identifier 'v'
equal '='
identifier 'x'
l_square '['
identifier 'pos'
percent '%'
identifier 'bitcount'
r_square ']'
semi ';'
if 'if'
l_paren '('
identifier 'a'
l_square '['
identifier 'pos'
slash '/'
identifier 'bitcount'
r_square ']'
slash '/'
identifier 'x'
l_square '['
identifier 'pos'
percent '%'
identifier 'bitcount'
r_square ']'
percent '%'
numeric_constant '2'
equalequal '=='
numeric_constant '1'
r_paren ')'
if 'if'
l_paren '('
identifier 'd'
equalequal '=='
numeric_constant '0'
r_paren ')'
identifier 'v'
equal '='
identifier 'v'
minus '-'
identifier 'x'
l_square '['
identifier 'pos'
percent '%'
identifier 'bitcount'
r_square ']'
semi ';'
r_brace '}'
identifier 'a'
l_square '['
identifier 'pos'
slash '/'
identifier 'bitcount'
r_square ']'
equal '='
identifier 'a'
l_square '['
identifier 'pos'
slash '/'
identifier 'bitcount'
r_square ']'
plus '+'
identifier 'v'
semi ';'
return 'return'
numeric_constant '0'
semi ';'
r_brace '}'
int 'int'
identifier 'seed'
l_square '['
numeric_constant '3'
r_square ']'
equal '='
l_brace '{'
numeric_constant '19971231'
comma ','
numeric_constant '19981013'
comma ','
numeric_constant '1000000000'
plus '+'
numeric_constant '7'
r_brace '}'
semi ';'
int 'int'
identifier 'staticvalue'
equal '='
numeric_constant '0'
semi ';'
int 'int'
identifier 'rand'
l_paren '('
r_paren ')'
l_brace '{'
identifier 'staticvalue'
equal '='
identifier 'staticvalue'
star '*'
identifier 'seed'
l_square '['
numeric_constant '0'
r_square ']'
plus '+'
identifier 'seed'
l_square '['
numeric_constant '1'
r_square ']'
semi ';'
identifier 'staticvalue'
equal '='
identifier 'staticvalue'
percent '%'
identifier 'seed'
l_square '['
numeric_constant '2'
r_square ']'
semi ';'
if 'if'
l_paren '('
identifier 'staticvalue'
less '<'
numeric_constant '0'
r_paren ')'
identifier 'staticvalue'
equal '='
identifier 'seed'
l_square '['
numeric_constant '2'
r_square ']'
plus '+'
identifier 'staticvalue'
semi ';'
return 'return'
identifier 'staticvalue'
semi ';'
r_brace '}'
int 'int'
identifier 'a'
l_square '['
numeric_constant '10000'
r_square ']'
equal '='
l_brace '{'
r_brace '}'
semi ';'
int 'int'
identifier 'main'
l_paren '('
r_paren ')'
l_brace '{'
int 'int'
identifier 'n'
equal '='
identifier 'getint'
l_paren '('
r_paren ')'
semi ';'
identifier 'staticvalue'
equal '='
identifier 'getint'
l_paren '('
r_paren ')'
semi ';'
identifier 'starttime'
l_paren '('
r_paren ')'
semi ';'
int 'int'
identifier 'x'
comma ','
identifier 'y'
semi ';'
while 'while'
l_paren '('
identifier 'n'
greater '>'
numeric_constant '0'
r_paren ')'
l_brace '{'
identifier 'n'
equal '='
identifier 'n'
minus '-'
numeric_constant '1'
semi ';'
identifier 'x'
equal '='
identifier 'rand'
l_paren '('
r_paren ')'
percent '%'
numeric_constant '300000'
semi ';'
identifier 'y'
equal '='
identifier 'rand'
l_paren '('
r_paren ')'
percent '%'
numeric_constant '2'
semi ';'
identifier 'set'
l_paren '('
identifier 'a'
comma ','
identifier 'x'
comma ','
identifier 'y'
r_paren ')'
semi ';'
r_brace '}'
identifier 'stoptime'
l_paren '('
r_paren ')'
semi ';'
identifier 'putarray'
l_paren '('
numeric_constant '10000'
comma ','
identifier 'a'
r_paren ')'
semi ';'
return 'return'
numeric_constant '0'
semi ';'
r_brace '}'
eof ''
